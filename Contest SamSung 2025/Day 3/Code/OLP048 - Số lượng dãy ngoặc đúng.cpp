#include <bits/stdc++.h>
#define base1 311
#define base2 997
#define endl "\n"
#define int long long
#define double long double
#define uint unsigned long long
#define TranHungss() signed main()
#define __builtin_popcount __builtin_popcountll
#define join(x, y, z); merge(begin(x), end(x), begin(y), end(y), back_inserter(z));
#define FastIO(); ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
using namespace std;


// ------------------------------ BigInt ------------------------------ // 

struct BigInt {
    string num;

    BigInt(string s = "0") {
        while (s.size() > 1 && s[0] == '0') s.erase(s.begin());
        num = s;
    }

    BigInt(int x) : BigInt(to_string(x)) {}

    bool operator<(const BigInt& other) const {
        if (num.size() != other.num.size()) return num.size() < other.num.size();
        return num < other.num;
    }

    bool operator>=(const BigInt& other) const {
        return !(*this < other);
    }

    bool operator==(const BigInt& other) const {
        return num == other.num;
    }

    BigInt operator+(const BigInt& b) const {
        string a = num, bb = b.num;
        if (a.size() < bb.size()) swap(a, bb);
        reverse(a.begin(), a.end());
        reverse(bb.begin(), bb.end());
        string res = "";
        int carry = 0;
        for (size_t i = 0; i < a.size(); ++i) {
            int digitA = a[i] - '0';
            int digitB = i < bb.size() ? bb[i] - '0' : 0;
            int sum = digitA + digitB + carry;
            res += (sum % 10 + '0');
            carry = sum / 10;
        }
        if (carry) res += (carry + '0');
        reverse(res.begin(), res.end());
        return BigInt(res);
    }

    BigInt& operator+=(const BigInt& b) {
        *this = *this + b;
        return *this;
    }

    BigInt operator-(const BigInt& b) const {
        if (*this < b) return BigInt("0");
        string a = num, bb = b.num;
        reverse(a.begin(), a.end());
        reverse(bb.begin(), bb.end());
        string res = "";
        int carry = 0;
        for (size_t i = 0; i < a.size(); ++i) {
            int digitA = a[i] - '0';
            int digitB = i < bb.size() ? bb[i] - '0' : 0;
            int sub = digitA - digitB - carry;
            if (sub < 0) {
                sub += 10;
                carry = 1;
            } else carry = 0;
            res += (sub + '0');
        }
        while (res.size() > 1 && res.back() == '0') res.pop_back();
        reverse(res.begin(), res.end());
        return BigInt(res);
    }

    BigInt& operator-=(const BigInt& b) {
        *this = *this - b;
        return *this;
    }

    BigInt operator*(const BigInt& b) const {
        int n = num.size(), m = b.num.size();
        vector<int> res(n + m, 0);
        for (int i = n - 1; i >= 0; --i) {
            for (int j = m - 1; j >= 0; --j) {
                int mul = (num[i] - '0') * (b.num[j] - '0');
                int p1 = i + j, p2 = i + j + 1;
                int sum = mul + res[p2];
                res[p2] = sum % 10;
                res[p1] += sum / 10;
            }
        }
        string result = "";
        for (int x : res) {
            if (!(result.empty() && x == 0)) result += (x + '0');
        }
        return BigInt(result.empty() ? "0" : result);
    }

    BigInt& operator*=(const BigInt& b) {
        *this = *this * b;
        return *this;
    }

    friend ostream& operator<<(ostream& out, const BigInt& x) {
        out << x.num;
        return out;
    }
};

// ------------------------------ End BigInt ------------------------------ //

const int maxn = 202;

int k;
string s;
BigInt dp[maxn][maxn][maxn];
bool vis[maxn][maxn][maxn];

BigInt solve(int i, int cnt, int d){
    if(cnt > s.size()) return 0;
    if(i == s.size()) return (cnt == 0 && d == k) ? 1 : 0;
    if(vis[i][cnt][d]) return dp[i][cnt][d];
    vis[i][cnt][d] = true;
    BigInt res = 0;
    if(s[i] == '?'){
        res += solve(i + 1, cnt + 1, max(d, cnt + 1));
        if(cnt > 0){
            res += solve(i + 1, cnt - 1, d); 
        }
    }
    else if(s[i] == '('){
        res += solve(i + 1, cnt + 1, max(d, cnt + 1));
    }
    else{
        if(cnt > 0){
            res += solve(i + 1, cnt - 1, d);
        }
    }
    return dp[i][cnt][d] = res;
}

TranHungss(){
    FastIO();
    cin >> k >> s;
    cout << solve(0, 0, 0) << endl;
    return (0 ^ 0);
}

/*⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠄⠠⡀⠀⠀⢠⠻⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠊⠀⠀⠀⠹⠤⠔⢋⣰⡇⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠄⢒⣒⢲⡦⠀⢘⠀⡠⠊⠉⣩⠗⠈⠉⠉⢀⣀⡀⠀⠀⠀⡜⡝⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠣⢄⠁⣸⡀⠀⠀⠘⠀⢇⠀⠀⢧⠀⠀⡠⢊⢠⣤⠞⠇⠀⠀⡆⣧⠀⠀⠀⠀⠀⢀⠀⠠⠀⠤⢖⠀⠀⠁⠀⠒⠤⢀⡀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢡⢈⠓⡲⠊⠁⡄⠈⠉⠒⠚⠉⠉⢰⢁⣸⣀⣀⣀⠠⠖⠀⡱⠑⣀⠠⠊⠁⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠁⠀⠀⠉⠒⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠄⠠⢄⠀⢠⠔⠒⠂⢄⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⡆⠀⠀⢀⠌⠈⠉⠀⠀⢰⢇⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⢀⡄⠀⠀⡰⠃⠀⢻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡉⠀⠀⠀⠀⠀⠀⠈⢂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⢀⣠⢤⣱⣇⣤⣔⣲⣸⣏⣄⣀⢈⡦⠒⢄⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣇⠙⠠⣶⢁⡶⡄⠘⡄⠀⢸⠀⠉⠉⠈⠝⠀⠀⠀⢀⡀⠤⢪⠃⠀⣼⣿⣟⡳⣏⠀⠀⣠⠇⠀⠀⠀⠀⠀⠀⣠⠖⢲⠋⠀⠈⡇⠀⠀⠀⠀⠂⠀⠀⠱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⢀⡴⣋⣶⠥⠚⢉⡁⠄⠀⠀⠉⠉⠉⠛⠶⢦⣄⡗⠢⡀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢸⠀⢸⡰⢼⣻⠃⢀⠛⣄⠸⣀⠀⡀⠀⠀⠀⠀⠀⠀⠀⡴⠁⠀⣴⡿⢉⡀⠱⣿⠀⢰⡏⠀⠀⠀⠀⠀⠀⢸⣁⣀⠀⠀⠀⠀⣹⠀⠀⠀⠀⠀⢡⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⣏⣶⠟⠁⢠⠶⠷⠶⠶⠶⠶⠶⠶⢴⣤⣄⣀⠈⠛⢦⡇⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠔⠉⡰⠃⠀⡀⠑⠚⠁⠀⢸⠀⣠⠟⠉⢉⠩⣉⣙⣲⣦⣤⣀⡀⢧⠀⠀⢿⡼⣿⣾⠀⠛⠦⢏⠣⠎⠁⠐⠂⠒⠈⠲⡇⠀⠀⠀⢀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡼⡵⠃⠀⡰⣁⣀⣄⣠⣀⣄⣠⣀⣄⣀⣀⣀⣉⡁⠀⠀⠱⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⣸⠀⠀⠀⠟⠒⠐⠒⠒⣺⠛⢀⣠⣾⠵⠒⠒⠒⠒⠒⠲⣦⣿⣿⡦⠤⠠⠝⢛⡩⠀⠀⠀⢸⠀⡇⠀⠀⠀⠀⠀⠀⠈⡝⠋⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⠁⠀⡰⠁⠀⠈⠀⠁⠀⠀⠀⠀⠀⠀⠀⠈⠈⠉⠁⠀⠀⢇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡄⠘⡄⠀⠀⠘⢆⠀⣠⠞⠁⠾⠋⣩⣤⠛⢶⡶⣶⠶⡶⣶⣾⣿⠿⢷⣀⠤⠔⠒⠁⠀⢀⡤⠊⢀⠇⠀⠀⠀⠀⠀⢠⠊⢀⡴⠒⠒⣄⠀⠀⠀⠀⠀⠀⢀⡜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠃⠀⠀⡇⠰⠶⠯⠾⠵⠛⠾⠙⠛⠛⠛⠟⠿⠭⠼⠑⠚⠐⠸
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢦⠈⠢⡀⠀⠘⡴⠁⠀⠀⣠⣿⡿⠛⠆⠈⠃⢉⣙⣻⣉⣃⣀⣤⠘⢷⣤⣀⡀⠀⡴⣃⠄⠊⠁⠀⠀⠀⠀⠀⢀⠇⢠⡏⠀⠀⠀⢸⠀⠀⠀⠀⢀⣴⠃⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡘⠀⠀⠀⡇⢀⡤⣠⢤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣄⣀⠀⠐
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠂⠀⢀⣴⠊⠉⠆⠀⣀⣀⠤⠤⠘⠒⠒⠛⠂⠉⣁⣤⢶⣿⡿⠋⢀⡠⠔⠊⠉⠉⠉⠉⠉⠙⠛⡇⠀⢸⣽⣷⠉⠉⣰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢆⠀⠓⠤⡀⠀⡟⠀⠀⠠⠚⠉⠀⠀⠀⡥⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⡇⢈⣀⣁⣀⣠⡠⠤⠤⠤⠤⠤⠤⠤⠤⣄⣈⠉⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠝⠈⠓⠒⠉⠀⠀⢸⠉⠀⠀⠀⠀⣀⣀⣠⢤⠴⣶⣯⣷⣾⠿⠋⣠⠖⠁⢀⣠⣴⣶⣿⣿⣷⣶⣦⣤⠃⠀⣸⡿⡟⢀⡤⠼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠂⠀⠀⣠⠞⠀⠀⠀⡀⠀⠀⠀⠀⢀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡆⠀⠀⠀⡟⠁⠂⠁⠉⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠁⠈⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⢀⡀⠀⠀⠀⠙⠒⢲⡞⣍⣳⠬⢶⠻⡏⡟⣾⣷⢧⣤⣴⠃⢀⣴⣿⣿⣿⠿⣟⡿⣿⣿⣿⡟⠀⢀⡯⠊⠀⠘⢦⠰⠀⢀⠤⠀⠂⠤⣀⠀⠀⠀⢀⣨⠔⠊⠁⠀⠀⠀⠊⠀⠀⠀⠀⣠⠊⠀⠀⠀⠀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⢸⡴⢦⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠂⠀⠸
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠐⠈⠀⠀⠀⢰⣄⠀⠿⡀⠀⠀⠀⠀⢀⡏⠁⢀⠴⠚⠈⢷⣾⢿⣼⡄⠙⠧⣀⣾⣿⣿⣿⣭⢟⢫⡙⢭⣹⠟⠀⢀⡾⠒⠉⠉⠉⠀⣀⠆⠁⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠠⠔⠋⠀⡠⠔⠀⠈⠀⠀⠀⠁⠢⡀⢀⣠⡀⠀⢀⠔⠈⣁⠱⠄⠀⠀⠀⠀⢸⠀⠀⠀⠸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣬
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⡆⠀⠀⠀⠀⠰⣌⡣⣽⡀⢳⡀⢀⣴⡾⠟⠁⠀⠘⣗⣒⣊⠥⣀⠸⣿⣿⡦⣀⠈⠙⠻⠿⢯⣔⣊⣦⡽⠖⠋⠀⣠⣾⠁⠀⠀⠀⠀⡔⠁⠀⠀⠀⢀⣀⠠⠠⠤⠀⠠⠀⠀⠐⠒⠒⠒⠒⠈⠁⠀⠀⠀⠀⠎⠀⠀⠀⣠⡴⢢⡀⠀⠀⢳⠎⡘⢀⡴⠡⠊⠀⠀⠀⠀⠀⠀⠀⠀⡿⡆⠀⠀⠀⡷⠶⠶⠶⠶⠶⠶⠶⠶⠶⠾⠾⠿⠳⠶⠖⠂⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⡇⠀⠀⠀⠀⠀⢨⣋⠈⢷⡘⡏⠁⠙⡆⠀⠀⠀⢠⠚⠀⠀⠀⠈⠣⡘⠛⢯⠭⠵⠢⢄⣀⡀⠀⠀⢀⣀⣠⢴⣺⡝⠱⠀⠀⠀⢀⠌⠀⠀⢀⡴⠚⠉⠉⠉⠐⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⠀⠀⠠⢠⠏⡆⢠⠇⠀⠀⣸⠀⠙⠊⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⣤⣷⢧⠀⠀⠀⢳⠀⡀⢀⡀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠐⠀⢣⠀⠀⠀⠀⠀⠀⠀⠙⢶⣿⠛⠉⠉⣠⠤⠐⠊⠁⠀⠀⠀⠀⠀⠀⠈⠉⠑⠛⠒⠊⠁⠙⢦⢹⠸⣌⠳⣘⠶⠃⠀⠀⣇⠀⣀⡎⠀⠀⢪⡏⠀⠀⣆⠀⠀⠀⠀⠡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠁⣏⠀⠛⠋⣀⡤⠞⠁⠀⠀⠀⠀⡆⠀⠀⠀⠀⠀⠀⣠⣾⠟⣿⣿⠀⠀⠀⢺⠛⠛⠛⠛⠛⠛⠻⠟⠿⠿⠿⠿⠿⠭⠃⠀⠸⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠙⢤⡀⡜⠁⠀⠀⠀⠀⣀⠤⠐⠈⠉⠉⠁⠢⡤⡀⠀⠀⠀⠀⠀⡯⠷⣌⡷⠋⠀⠀⠀⠀⠘⢯⢼⠁⠀⠠⡏⢳⣄⠀⣿⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠁⠀⠀⠀⠘⢲⣒⠉⠁⠀⠀⠀⠀⠀⢀⡜⠀⠀⠀⠀⢀⡠⢚⣵⠋⠀⢻⣿⠀⠀⠀⢸⣦⣴⣦⣶⣶⣶⣶⣶⣦⣶⣤⣦⣤⣀⣀⢠⠃⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠣⣀⠀⠣⡀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠐⠢⠤⠒⡈⢁⠀⠤⠠⠤⣤⠤⣀⠀⢁⠀⠱⡀⣀⠠⣤⠇⠀⠀⠀⠀⠀⠀⠀⣀⣠⣼⠾⡀⠀⠀⣷⢄⢿⡂⣹⡇⠀⠀⠀⠀⠀⠡⡀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠃⠀⠀⠀⢀⠎⠥⠜⠀⠀⠀⠀⣀⡤⠖⠋⣀⠠⠄⠒⠈⠁⠀⠘⠁⠀⠀⢸⣿⠀⠀⠀⡎⠀⢀⡀⡀⡀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⣦⡘⠢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⡌⣧⠘⡀⠀⢣⡏⣸⠀⣀⣀⣀⡀⠀⠀⠀⣼⡟⠋⠀⠀⣷⡀⠀⠹⡌⠳⣷⣸⡏⢆⠀⠀⠀⠀⠀⠐⢄⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⣀⠮⠤⢄⡠⢤⠤⣶⡯⠗⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠠⡀⠀⠀⢸⣾⠀⠀⠀⡗⠛⠛⠛⠙⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠀⡇⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠈⠀⠈⠓⠾⣦⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢀⠀⢠⡄⢸⣺⡄⠁⠀⡸⢧⣻⠍⠟⠛⠛⢿⠷⠀⡀⠉⣠⣆⣤⡾⣿⣷⣄⠀⠈⢦⡈⢎⠳⣄⠱⡀⠀⠀⠀⠀⠀⠱⡆⠒⠒⠀⠁⠀⣠⠤⡤⠊⢀⣄⠀⡠⣤⡾⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡄⠀⠀⡏⠀⠀⢸⠀⣀⣀⣀⣄⣀⣀⣀⣀⣀⣀⣀⣀⠀⠀⣸⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠉⠓⠢⠄⣀⠀⠀⠀⠀⠀⠠⣄⡀⠘⢆⠣⠀⢧⠀⣿⠃⠀⠀⣽⢬⢯⡳⣷⢦⣤⠤⣿⠷⣷⡞⠉⢿⣿⡿⠃⣿⣏⢶⣄⠀⠙⠮⣀⠈⠳⡌⢢⡀⠀⠀⣀⡀⠈⠣⡀⠀⢠⠋⠀⠀⠀⢀⠎⢸⢉⡵⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣧⠀⠀⠀⢸⢻⡄⢰⡇⠀⠀⢸⠀⠀⠀⠈⠈⠉⠉⠉⠉⠉⠉⠋⠙⠛⠀⡏⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢃⣀⡴⠀⠂⠠⡀⠀⠀⠀⠀⠀⠀⠈⠑⠒⠠⢄⡀⠉⢮⠂⡌⣆⠱⡘⠀⣿⠀⠀⠘⠀⠀⢳⡑⡞⣾⢋⣶⣀⠀⢹⣷⠀⠀⢀⡄⣠⡿⢿⡈⠙⢵⡢⢄⣈⣉⡒⠼⢦⠈⢦⣼⢫⣿⠞⠉⢉⡦⡇⠀⠀⠀⢠⢻⣆⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣯⡳⣄⠀⠘⡧⣇⢸⡇⠀⠀⢸⠰⠴⣶⣶⣶⣶⣖⣶⣲⣖⣶⣶⡶⠦⢰⠁⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠬⠒⠂⢄⡀⡾⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠃⠀⠑⠢⢙⠢⢸⡄⢷⠀⡏⠠⠀⠀⠀⠀⠘⣷⡄⠘⣿⣯⢿⣧⠀⢻⡆⠀⠺⡼⢋⣷⢬⣣⠀⡀⣀⢉⡒⢦⣌⣉⣉⡳⣼⢰⠏⣏⡀⣠⡿⠀⠀⠀⠀⢀⣼⢼⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠻⣼⣷⣤⣷⡹⡼⡇⠀⠀⢸⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⣠⠖⠀⠘⣇⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⠀⠀⠀⠀⠀⠑⠢⡇⢼⢸⠁⠁⠀⠀⠀⠀⠀⡏⢣⠀⣿⣿⠏⠃⠀⢸⣷⣄⣤⣤⡽⠶⠚⠉⠛⡣⠄⠀⢀⠉⠈⠁⠀⠉⠉⠉⠉⠉⠉⢓⠃⠀⠀⠀⣠⣞⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⣉⣧⠀⠀⢸⠀⠉⠿⠷⠶⠶⠾⠶⠿⠿⠻⠯⠉⢰⠃⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠳⣄⣀⡴⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⢇⠀⠀⠀⠀⠀⠀⠀⢱⣸⡏⠈⠀⠀⣄⢀⣠⣾⣴⣦⡄⣻⠏⢠⣠⣿⣿⣝⣹⡞⣡⣴⠶⠛⣛⣩⣴⠎⢉⣉⣀⠀⠀⣀⣠⣴⣋⣠⣤⣴⠾⡀⠀⠀⠀⠽⣌⡟⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⣤⣤⣤⢤⡒⠒⠪⠳⣼⠀⠀⠈⡄⠲⠤⣤⢤⣤⢤⡤⢤⠤⡤⠶⠀⡜⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠓⠄⢠⠀⠀⠀⠀⠀⠀⢀⡆⠀⠀⠀⠀⠀⠀⢘⠀⠀⠀⠀⠀⠀⠀⢨⠞⠀⠀⠀⠀⡅⠉⠟⢻⠟⢻⠀⢹⣶⣿⡿⣿⠿⢡⣾⣿⠟⣡⣾⠟⠋⣁⣤⢤⣃⣤⡴⠞⡻⠍⠁⠀⠀⢠⡞⡍⠀⠙⠀⠀⠀⡴⡸⣏⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⢖⡫⣵⠶⠛⠉⠁⠀⠀⣱⠀⠀⠀⠀⢆⠀⠀⢣⠀⠀⠈⠉⠈⠁⠉⠈⠀⠁⠀⡴⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡀⠀⠀⠀⠀⢠⡎⠀⠀⠀⠀⠀⣀⠤⠊⠀⠀⠀⠀⢀⠠⠐⠁⠀⠀⠀⠈⠀⡇⠀⠀⣼⣤⠏⠀⢸⣷⠏⠀⠃⠀⠘⢿⣯⣴⣿⢇⣴⣿⡟⣡⣾⡏⠭⠘⠦⣄⠤⠤⠤⣤⠏⠀⣇⠀⠀⠀⠀⠀⢫⢉⣽⡾⡄⠀⠀⠀⠀⠀⠀⠀⢀⡴⣋⢦⢿⢋⡧⠀⢀⣤⠦⣤⠀⠸⢤⠀⠀⠀⠀⠠⡀⠈⡇⠠⠿⠽⠯⠟⠹⠋⢋⡩⠚⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠂⠤⠐⠊⠁⠀⠉⠈⠁⠉⠀⠀⠀⠀⠀⠀⡤⠊⠀⠀⠀⠀⠀⠀⠠⠃⢀⠇⠰⠾⠛⣉⣀⣀⢸⡿⢀⣠⣴⣶⣶⣿⡟⢻⣿⣿⠟⣹⣴⡿⢻⣧⡀⠀⠀⠀⠉⠓⠳⢿⡀⠀⡽⠄⠀⠀⠀⠀⠘⡟⢸⡇⣧⠀⠀⠀⠀⠀⢀⡴⣋⢶⠝⠁⠈⢻⢠⠄⠉⠀⠀⠈⠀⢠⢾⠀⠀⠀⠀⠀⠀⠁⠲⠤⠠⠄⠄⠤⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⣿⡍⣦⠀⠀⠀⠐⠀⢀⠞⣠⡄⠀⠰⣁⣠⡏⢨⣗⣾⠟⠋⢀⣀⠀⡇⣨⠿⣶⣶⣿⠛⠀⠀⠻⣿⣶⣦⢤⡒⠲⣊⣿⠃⠀⢷⠀⠀⠀⠀⠀⠀⠘⢤⣻⡌⣧⡀⠀⢀⣠⢏⡲⡱⠃⠀⠀⠀⠈⣏⣰⠄⠰⠚⠓⣆⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠸⠂⠒⠊⠁⠀⠀⢀⣠⢶⠿⣊⠟⠀⢀⣴⠿⠋⠀⣸⣷⠈⢠⣾⡿⠛⠛⠹⠟⠉⠀⠀⠉⠁⣀⣀⣾⣄⠣⡙⢷⡌⢦⣟⡿⠀⠀⡾⡆⠀⠀⠀⠀⠀⠀⠀⡱⢿⡰⣍⡛⢭⢢⡓⡼⠁⠀⠀⠀⠀⠀⢸⣁⣤⠠⣤⣌⠁⠀⠈⡇⠀⠀⠀⠀⡀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡅⠀⠀⠀⠀⢀⠤⢚⣹⣾⡿⠋⠁⠀⢀⣈⡠⢞⡍⢀⠏⣷⠀⠻⠋⠀⠀⢀⣀⣤⣤⠶⠒⢋⣩⣡⠴⠚⠙⢷⠘⡈⣹⠏⡞⢱⡏⡆⡷⠙⣄⠀⠀⠀⠀⠀⠀⠓⢬⢻⡴⡹⢌⡖⣭⠃⠀⠀⠀⠀⠀⠀⣜⡥⠄⠀⠀⠸⡆⠀⢈⣇⠠⠐⠈⠀⠀⠀⠀⢱⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⢀⠞⣡⣴⣿⡿⠉⠀⠀⠀⢸⠁⢀⡽⠎⢀⣎⣤⣿⣀⣤⢶⣶⠿⠿⠛⠉⣀⠤⠚⠛⠛⠒⠒⠒⠒⠊⢣⡿⠃⡼⠁⠸⡇⢹⣿⢠⠸⡄⠀⠀⠀⠀⠀⠀⠀⢯⣽⣎⠵⡸⡼⠀⠀⠀⠀⠀⠀⢰⡫⠴⠂⣶⣶⢦⡀⢰⡟⠁⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡖⠈⠀⠀⢀⡴⢃⣨⠾⢻⠋⠀⠀⠀⠀⢠⠾⠚⠉⣠⣴⣿⠟⠋⣡⠔⠋⢉⣀⣤⠶⠾⠭⠖⠒⠒⠛⠛⠚⠓⠒⠋⣩⠏⠀⣸⠃⠀⠀⠀⠈⢿⡼⡀⠱⣄⠀⠀⠀⠀⠀⠀⠘⢄⣈⣷⡵⠃⠀⠀⠀⢀⡀⠴⣅⣀⠤⠚⠀⢨⠿⢁⣠⠇⠀⠀⠀⠀⠀⠀⢀⡴⠇⠒⠀⠁⠒⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⢀⡀⠀⠀⣀⠧⠄⣢⠤⠟⠒⠛⠒⠢⢦⣽⠶⢦⣄⣀⠀⣠⡴⠚⣩⠴⢃⠴⢋⡠⠔⢊⡵⣎⡵⠴⡒⠒⣎⢉⣉⡭⠝⠋⣑⣲⡞⢡⠃⡰⠃⣴⠃⠀⠀⠀⠈⢆⢣⠀⠈⠑⡄⠀⠀⠀⠀⠀⠀⠀⠙⠙⠨⠭⠮⢭⡹⣄⣠⠒⠉⢢⣄⣰⠊⠀⡏⡩⠄⠒⠈⠐⡄⠀⠔⠋⠀⠀⠀⠀⠀⠀⣡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠎⠀⢀⣠⠤⠃⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠒⠬⣍⢻⡯⠴⣉⣁⡖⠡⠂⠁⢠⡴⠿⠭⠴⠦⢤⠟⠛⣯⣁⣰⠤⢟⡋⡡⠊⠰⠁⡴⢡⢪⠎⠀⠀⠀⠀⠀⠈⢦⣣⠀⠀⠸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⢠⡾⠁⠀⣠⠔⠋⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠀⡾⢀⠾⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢦⡈⠓⢤⡀⠈⠹⠶⣖⠧⠤⠴⠶⢶⠶⢺⠛⠛⢹⣀⣤⠞⢋⠜⠀⡴⢁⡴⡑⡡⠃⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠈⠒⢤⣀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠔⠊⠑⠜⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⢀⠞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⠀⣸⠗⡏⠀⠀⠀⢀⠤⠤⢤⠤⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⢦⠀⠉⠲⣤⣀⠀⠈⠁⠀⠀⣀⣠⡬⣷⠺⡋⡏⠀⠔⠁⢀⢞⡠⢋⠖⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠒⠀⠈⠱⡄⠐⠂⠒⠐⠂⠤⠚⠀⠀⠀⣀⡤⠒⠉⠁⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⡔⠉⠉⠐⠤⡀⠀⠀⠀⠀⠀⠀⢀⠆⣇⠀⠀⠀⠀⣾⠉⠀⢰⡏⣀⣠⣈⣿⢧⣌⡑⠤⡠⠤⣀⡀⠀⠀⠀⠀⠀⠈⢷⣦⡀⠙⢯⣙⠛⠶⣤⡀⣑⠊⠁⠀⠀⢱⣹⡀⠀⣴⠿⠋⣰⡫⠊⠀⠀⠀⢶⡒⠒⠒⠶⠶⣖⣦⡬⠭⠥⠤⠶⠖⠶⠆⠀⠙⠳⠖⠛⣦⣤⡤⠖⣲⠖⠊⠁⠀⠀⠀⠀⠀⠀⡠⠐⠁⢠⡴⢢⡀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⣠⠤⣤⡀⠈⡄⠀⠀⠀⠀⠀⣼⠏⠉⢀⠔⢦⠚⠹⠃⠀⣸⣾⠟⠛⠉⠛⠚⠶⣝⣒⢒⢶⣯⡇⠀⠀⠀⠀⠀⠀⠘⠻⣷⣄⠀⠉⠳⣄⠀⠉⠒⠬⣑⡚⢶⠦⠟⡇⠈⠁⣠⡾⠋⠀⠀⠀⠀⠀⠀⠈⠉⠐⠒⠒⠐⠂⠒⠒⠲⠤⢤⣤⣤⠴⠶⠶⠒⠛⢋⡩⠤⠶⠍⣀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⡜⢡⠀⣷⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢀⠖⠉⢀⡽⣿⣬⢓⣦⡙⠶⢷⡀⠀⠀⠀⠀⣧⢦⠀⡯⣆⠘⠇⠘⣇⣼⡟⠁⠀⠀⠀⠀⠀⠀⠀⠈⠻⣬⢿⣞⢆⠀⠀⠀⠀⠀⠀⠀⢱⠙⠷⣝⠢⢌⡑⠢⠄⣀⠀⠀⠈⠉⢹⢸⠀⠐⠋⠀⢀⣤⡶⠖⠂⠀⠀⠀⠀⠐⢄⠀⡀⠀⠤⠄⠒⣀⡀⠀⠀⢀⣠⣤⡴⠛⠓⠒⠒⠒⠤⣀⠉⠢⠀⠀⠀⠀⠀⢰⠀⠀⠄⢰⣣⠎⠀⣿⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣀⣸⣠⢞⣭⠖⠓⠉⠉⠈⠉⠉⠒⠼⣒⠤⢄⡠⡇⠀⠀⡇⠳⣄⡀⠀⣼⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢞⢯⡻⣦⡀⠀⠀⠀⠀⠀⠈⡇⠀⠀⠀⢠⡏⠒⠤⣒⠬⣉⠀⠂⠀⢏⣆⠀⠀⢰⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢑⣠⠴⠖⢚⣉⡥⠔⢒⡮⠙⠊⠀⠉⠉⠉⠐⠒⠤⡀⠈⢧⢣⠈⣦⠀⠀⠀⠸⠀⠀⠀⠀⠁⠀⣰⠃⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢰⠉⣠⢲⣹⠟⠁⠀⣩⡽⢋⣴⠦⣀⠀⠀⠈⠙⢷⣝⢵⢢⡐⠁⢀⠈⠙⣶⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⡜⣽⡗⢄⠀⠀⠀⠀⠀⢳⠀⠀⠀⣾⠀⠀⡄⠀⠉⠙⠛⠶⠤⠸⠸⡆⠀⠉⠀⠀⠀⠀⠀⠀⣀⠤⠔⠒⠉⠁⠀⠊⠉⢉⡠⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣸⢠⠀⣿⢣⠀⠀⠀⠣⡀⠀⠀⣠⠜⠁⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠸⣴⣵⠚⠀⠀⢀⣼⠟⣡⡾⠁⣠⣾⠟⢂⡀⠀⠀⠹⣿⣏⣿⣀⡘⣶⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣷⢸⣇⢨⡂⠀⠀⠀⠀⠀⡇⠀⢸⡭⠀⣰⡇⠀⢀⡆⠀⠀⠀⠀⢣⠱⡀⠀⠀⠀⠀⠀⠀⠙⠒⣒⠀⠀⠀⣀⠤⠒⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡜⢸⠀⢿⢘⠀⠀⠀⠀⠀⠉⢻⠀⠀⠀⠀⠀⢈⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠰⡟⠁⠀⠀⣰⡿⢃⣾⠏⢀⣶⠟⠁⢀⣴⡕⢤⠀⠀⠈⢿⣿⡗⠛⠛⠷⠶⠦⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢟⢢⢻⣆⠉⢆⠀⠀⠀⠀⢸⠀⣦⠇⣰⡟⠀⢀⠎⡇⠀⠀⠀⠀⠀⡇⠱⡤⠤⠄⠒⠐⠂⣉⣉⠠⠔⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⢀⠏⢸⣸⠸⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠘⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠃⢱⠁⠀⢠⣾⠟⣰⡿⠁⣰⡿⠃⠀⣰⡿⠋⣠⣾⠵⡄⠀⠀⠡⣱⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠏⣎⢲⡏⡸⠀⠈⢢⠀⠀⠀⢸⢰⡟⢠⡹⠀⢀⠎⠀⡇⠀⠀⣀⠠⠒⣁⠤⠴⠤⠔⠒⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠐⠡⢂⠎⠀⣇⡏⢸⠀⠀⢀⠠⠒⠁⠀⠀⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢾⠀⣴⡿⢃⣾⠏⣠⡾⠋⠀⣠⣾⠟⢀⣾⠟⢁⡴⡾⢆⠀⠀⠘⣇⡀⠀⠀⠀⠀⠈⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⣴⢣⣹⣰⠏⠀⡇⠀⠰⡏⠀⠀⠀⢸⡞⠁⡵⠁⡠⢻⠀⠸⡁⣒⡡⠔⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⡁⠊⡰⠋⠀⣸⡟⠀⡎⠀⡐⠁⠀⠀⠀⠀⠀⠀⣀⡤⠤⣄⠀⢃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢸⡸⠋⣰⡟⢁⣴⠟⠁⣠⣾⠟⢁⣼⠟⠁⣠⣾⠟⠁⣠⣷⠀⠀⠨⣷⠀⠀⠀⠀⠀⠘⣟⢧⡀⠀⠀⠀⠀⢠⣾⠵⠊⠁⠀⠀⡴⡷⠀⠀⡇⠀⠀⠀⢻⣀⡾⢁⠜⡱⢋⡠⠖⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠒⠠⠀⢀⠀⠀⠀⠀⠀⠀⠠⠔⠊⢀⡨⢤⠞⠁⠀⢰⡟⠀⡜⠀⡘⠀⠀⠈⠀⠀⠀⠀⡰⠁⠀⡴⠸⡄⠀⠡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⡇⠘⠃⣴⡿⠁⢀⣶⠟⢁⣴⡿⠉⢠⢞⡵⠃⢠⢞⡽⠃⣳⡃⠀⠈⢿⡀⠀⠀⠀⠀⠘⣞⡧⠀⠀⠀⣴⡿⠁⢀⣀⣀⡤⠔⣇⠀⠀⡴⠃⠀⢀⠔⣻⠏⠀⢡⠾⠓⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⢄⣀⡀⠀⠀⠈⢁⡠⠤⠐⠂⣠⠴⠋⡰⠋⠀⠀⢠⠟⠀⣰⠃⠀⡅⠀⡄⠀⠀⠀⠀⢰⡇⠀⠸⣇⣰⠃⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠸⡄⠾⠋⢀⣴⡟⢁⣴⡿⠋⢀⡴⡻⠋⢀⡴⣫⠋⢀⣴⡟⠙⣄⠆⠈⢳⡄⠀⠀⠀⠀⢿⠇⠀⠀⢠⡟⣩⠟⠁⠀⡞⠀⠀⠈⠳⠾⠔⠈⠀⣨⣿⠁⣀⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢟⢤⡀⠀⠉⠉⠉⠀⢀⣠⠴⠋⠁⣠⠞⠀⠀⠀⣰⠋⠀⣰⠋⠀⢠⠀⠀⠀⠀⠀⠀⠀⠘⡇⠀⠀⠀⠁⠀⠀⣠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠱⣄⠐⠿⠃⣠⡿⠋⠀⣤⣯⠞⠁⡴⣫⠞⠁⣠⣾⠋⢀⣼⡿⠳⢄⠀⠹⣦⡀⠀⠀⠀⢰⣤⡀⢸⢡⡟⠀⠀⢸⡇⠀⠀⠀⡴⠃⠀⡠⢮⡥⡮⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡀⠈⠙⠒⠒⠒⢋⡡⠔⠀⣠⠜⠁⠀⠀⣠⡾⠁⠀⡰⠃⠀⠀⠈⡀⠀⠣⠀⠀⠀⠀⠀⢣⠈⠑⠒⠒⠂⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠈⠢⡀⠚⠁⠀⣠⣾⠟⠁⣠⢞⡽⠁⢀⣾⠟⠁⣠⢯⠞⠀⠀⣸⡿⡀⠈⠓⢦⡀⠀⠀⢿⣷⣼⠀⠻⢤⠀⠀⠙⠶⠖⠀⠈⣍⣉⣀⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡔⠒⠒⠒⠈⠁⠀⣠⠞⠁⠀⣀⠤⣺⠋⠀⠀⡴⠁⠀⠀⠀⠀⢣⠀⠀⢀⡀⠀⠀⠀⠸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠈⠳⢄⠈⠛⠁⣠⢞⡵⠋⢀⡴⣻⠋⢀⡼⡵⠋⠀⢀⣾⠟⠀⠈⣵⠦⣀⠈⠛⢯⣏⡹⢻⡄⠀⠰⣄⡀⠀⠀⣦⣀⣀⠤⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⣀⠀⢀⡠⠞⠃⠠⢔⣈⡠⠖⠉⡇⢀⠞⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⣽⠀⠀⢀⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢤⠐⠓⠋⠀⣠⢏⡼⠁⣠⢏⠞⠁⠀⣰⡿⠃⠀⣠⡾⠋⠀⣠⣷⢄⡀⠉⢷⡩⡏⠓⠒⠚⠈⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠊⠀⠀⠀⠀⠀⢁⠀⢀⠎⡠⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠏⠀⡴⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠢⣀⠀⠑⠋⢀⡴⣣⠋⠀⣀⣾⠏⠀⢀⣾⠏⠀⢀⣴⡟⠁⠀⣩⣦⠀⠙⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⡀⢃⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢇⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠓⢤⡀⠉⠞⠁⠀⣴⡟⠁⢀⣴⡿⠁⠀⣤⣿⠋⠀⣠⣾⠟⠀⢑⣄⢡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢂⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠒⢄⡀⠛⠉⠀⣠⣾⠋⠀⢀⣾⡟⠁⢀⣴⡟⠁⠀⣴⠟⠀⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠒⠤⡀⠁⠀⠀⣰⡿⠋⠀⣠⢾⠏⠀⣠⣾⠋⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢⣄⠉⠁⢀⡴⡷⠋⢀⣴⠟⠁⢀⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠑⠦⢄⣀⢠⣎⣉⠤⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀*/